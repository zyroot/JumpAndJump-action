{"version":3,"sources":["MonstePhyCtrl.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"..\\..\\..\\..\\..\\assets\\Scripts\\跳一跳","sourcesContent":["// Learn TypeScript:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/typescript.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nimport { fllowCtrl } from './FllowCtrl';\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class NewClass extends cc.Component {\r\n\r\n    //RigidBody 类型\r\n    private rigidbody = null;\r\n    //跳跃持续时间\r\n    private jumpDuration = 0.7;\r\n    //跳跃高度\r\n    private jumpHeight = 200;\r\n    //是否正在跳跃\r\n    private isJump = false;\r\n\r\n    private fllowCtrl :fllowCtrl =  null;\r\n\r\n    public init(fllowCtrl:fllowCtrl){\r\n        this.fllowCtrl = fllowCtrl;\r\n    }\r\n\r\n    start () {\r\n        this.rigidbody = this.node.getComponent(cc.RigidBody);\r\n        this.rigidbody.applyForceToCenter(cc.v2(0,-100000));\r\n        cc.find(\"Canvas\").on(cc.Node.EventType.TOUCH_START,this.onScreenTouchStart,this);//添加屏幕监听\r\n    };\r\n    //碰到刚体后 弹跳的动作序列\r\n    private setJumpAction(){\r\n        //跳跃上升\r\n        let jumpUp = cc.moveBy(this.jumpDuration,cc.v2(0,this.jumpHeight)).easing(cc.easeCubicActionOut());\r\n        //下落\r\n        let jumpDown = cc.moveBy(this.jumpDuration,cc.v2(0,-this.jumpHeight)).easing(cc.easeCubicActionIn());\r\n        //设置0.1秒的延迟  完成平底移动\r\n        let delayaction = cc.delayTime(0.05);\r\n         //向上动作执行完，\r\n         let upovercallback = cc.callFunc(function(){\r\n            // this.rigidbody.applyForceToCenter(cc.v2(0,-20000));//给一个向下的力\r\n         },this);\r\n         //向下动作执行玩，修改  isjump =false  给向下的力，做动作补偿\r\n        let callback = cc.callFunc(function(){\r\n            this.rigidbody.applyForceToCenter(cc.v2(0,-20000));//给一个向下的力\r\n            this.isJump = false;\r\n        },this);\r\n        return cc.sequence(delayaction,jumpUp,upovercallback,jumpDown,callback);\r\n    };\r\n\r\n     // 只在两个碰撞体开始接触时被调用一次\r\n    onBeginContact(contact:cc.PhysicsContact, selfCollider:cc.PhysicsCollider, otherCollider:cc.PhysicsCollider) {\r\n        this.node.stopAllActions();//防止动作重复\r\n        cc.director.getPhysicsManager().gravity = cc.v2(0,0);\r\n        if(selfCollider.tag === 11 && otherCollider.tag === 21 && !this.isJump){//判断刚体标志 且 没有在跳跃\r\n            this.isJump = true;//跳跃状态改为 true\r\n            this.node.runAction(this.setJumpAction());//执行动作\r\n            this.rigidbody.linearVelocity = cc.v2(0,30);  //留一点向上的线性速度\r\n        }\r\n        if(selfCollider.tag === 11 && otherCollider.tag === 22){//判断刚体标志 \r\n            this.rigidbody.linearVelocity = cc.v2(200,0); \r\n            cc.director.getPhysicsManager().gravity = cc.v2(0,-320);\r\n            this.rigidbody.linearDamping = 1;\r\n        }\r\n    };\r\n\r\n    // 只在两个碰撞体结束接触时被调用一次\r\n    onEndContact(contact, selfCollider, otherCollider) {\r\n        this.isJump = false;\r\n        var linev = this.rigidbody.linearVelocity;\r\n        this.rigidbody.linearVelocity = cc.v2(linev.x,0);//y轴上的线性速度设置为0 关键\r\n    }\r\n\r\n     //屏幕点击开始\r\n     private onScreenTouchStart(event: cc.Event.EventTouch) {\r\n        this.moveLeft();\r\n        if (event.getLocationX() > cc.winSize.width/2) {\r\n            // this.moveRight();\r\n        }\r\n    }\r\n\r\n    moveLeft(){\r\n        this.node.stopAllActions();//停止所有动作\r\n        this.fllowCtrl.fllowY();\r\n        var action  = cc.moveBy(0.25,cc.v2(150,0)).easing(cc.easeCubicActionInOut());//执行向前动作\r\n        let callf = cc.callFunc(function(){\r\n            this.isJump = false;\r\n            this.rigidbody.applyForceToCenter(cc.v2(0,-30000));//给一个向下的力\r\n            // cc.director.getPhysicsManager().gravity = cc.v2(0,-420);\r\n        },this);\r\n        this.node.runAction(cc.sequence(action,callf));\r\n    }\r\n\r\n    // 每次将要处理碰撞体接触逻辑时被调用\r\n    onPreSolve(contact, selfCollider, otherCollider) {\r\n    }\r\n\r\n    // 每次处理完碰撞体接触逻辑时被调用\r\n    onPostSolve(contact, selfCollider, otherCollider) {\r\n    }\r\n\r\n\r\n    // update (dt) {}\r\n}\r\n"]}